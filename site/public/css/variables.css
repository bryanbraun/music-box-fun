:root {
  /* COLORS */
  /* brand colors */
  --mb-white: white;
  --mb-offwhite: #fcfcfc;
  --mb-gray-3: #f8f8f8;
  --mb-gray-6: #f2f2f2;
  --mb-gray-10: #efefef;
  --mb-gray-20: #dddddd;
  --mb-gray-30: #c0c0c0;
  --mb-gray-35: #bbbbbb;
  --mb-gray-40: #a9a9a9;
  --mb-gray-50: #777777;
  --mb-gray-60: #444444;
  --mb-black: #000000;
  --mb-orange-accent: #947000;

  /* functional colors */
  --left-sidebar-color: var(--mb-white);
  --tabs-ui-color: var(--mb-black);
  --paper-color: var(--mb-white);
  --surface-color: var(--mb-gray-10);
  --music-box-color: var(--mb-gray-30);
  --controls-button-color: var(--mb-offwhite);
  --controls-border-color: var(--mb-gray-20);
  --controls-border-bottom-color: var(--mb-gray-35);
  --active-hole-color: #ffb500;
  --highlighted-pitch-color: #eaeaa4;
  --hole-color: var(--mb-gray-60);
  --link-color: var(--mb-black);
  --text-color: var(--mb-black);
  --discrete-text: var(--mb-gray-40);
  --error-text-red: red;
  --icon-dark: var(--mb-gray-60);

  /* FONTS */
  --main-font: 'Nunito', 'Helvetica Neue', sans-serif;

  /* LENGTHS */
  --left-sidebar-width: 286px;
  --right-sidebar-width: 175px;
  --paper-side-margin: 2rem;
  --music-box-height: 200px; /* the same for all music boxes */
  --music-box-distance-from-top-of-workspace: 120px;
  --playhead-distance-from-top-of-workspace: calc(var(--music-box-distance-from-top-of-workspace) + 44px);
  --tabs-border: 1px;
  --floating-action-button-diameter: 56px;

  /* page height breakdown */
  --number-of-bars: 52;
  --quarter-bar-gap: 48px;
  --note-line-starting-gap: 16px; /* the same for all box types and hole sizes */
  --final-bar-line: 1px;
  --footer-button-height: 48px;
  --total-note-line-height: calc(
      var(--number-of-bars)
    * var(--quarter-bar-gap)
    + var(--note-line-starting-gap)
    + var(--final-bar-line)
    + var(--footer-button-height)
  );


  /* Z-INDEX (page context) */
  /* -1 - 10: music box */
  --z-music-box-bottom-plate: -1;
  --z-music-box-extend-button: 2;
  --z-music-box-notes: 4;
  --z-space-editor-bar: 5;
  --z-music-box-note-header: 6;
  --z-music-box-playhead: 8;
  /* 10-100: Overlays */
  --z-nav-icons: 10;
  --z-controls: 10;
  --z-share-box: 15;
  --z-floating-actions: 15;
  --z-audio-context-message: 16;
  --z-space-editor-drag-zone: 50;
  --off-canvas-sidebar-overlay: 75;
  --off-canvas-sidebar: 80;

  /* (left-sidebar context) */
  --z-search-results: 1;

  /* OTHER */
  --controls-border: 1px dashed var(--mb-gray-30);
  --back-to-top-scroll-position: 200px;

  /* BREAKPOINTS */
  /* These aren't a thing! See https://stackoverflow.com/a/40723269/1154642
     I'm going to put them here anyway, for documentation. If I ever need
     to change one of these variables, I'll just find/replace the pixel value.
     I'll also try to keep the pixel values unique, so it's unlikely that any
     other properties will inadvertently use them.

  --one-to-two-columns: 720px;
  --two-to-three-columns: 900px;
  */
}

/* These variables are defined on 'body' so they can be affected by body classes */
body {
  --number-of-notes: 15;
  --hole-width: 16px;
  /* Used to adjust the y-position of the note, centering it on the value defined in songData.
     Doing this in CSS allows us to make CSS-driven hole-size adjustments (for mobile, print, etc).
     For more details, see the comments in note-line.js */
  --y-adjustment-for-hole-width: calc((var(--hole-width) / 2) * -1);
}

@font-face {
  font-family: 'Nunito';
  font-style: normal;
  font-display: swap;
  font-weight: 400;
  src:  url('/fonts/nunito-v8-latin-regular.woff') format('truetype');
}

@font-face {
  font-family: 'Nunito';
  font-style: normal;
  font-display: swap;
  font-weight: 700;
  src: url('/fonts/nunito-v8-latin-700.woff') format('truetype');
}
